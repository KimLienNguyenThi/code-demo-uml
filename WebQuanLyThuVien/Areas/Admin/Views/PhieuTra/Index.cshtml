
@{
    ViewBag.Title = "Phiếu Trả";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<!-- Hiển thị danh sách NhanViens -->
<section class="content">
    <div class="container-fluid pt-4">
        <div class="row">

            <!-- Tạo phiếu trả -->
            <div class="col-7" style="height: 80vh;">
                <div class="card" style="height: 100%;">
                    <div class="card-header">
                        <div class="form-row">
                            <div class="col-7">
                                <h3 class="text-center  text-blue text-bold"> Phiếu trả </h3>
                            </div>
                            <div class="col-3">
                                <button type="button" class="btn btn-primary" onclick="Save();">Tạo phiếu trả</button>
                                @* <button type="submit" class="btn btn-primary taoPhieuTra" id="taoPhieuTra">Tạo phiếu trả</button>*@
                            </div>
                            <div class="col-2">
                                <button type="button" class="btn btn-warning lamMoiSach" onclick="lamMoi()">Làm mới</button>
                            </div>

                        </div>
                    </div>
                    <div class="card-body" style="overflow-y: auto;">
                        <form>
                            <!--Mã thẻ-->
                            <div class="form-row">
                                <div class="form-group col">
                                    <label for="name">Mã thẻ độc giả:</label>
                                    <input type="text" class="form-control" id="selectedMaThe" name="selectedMaThe" readonly>
                                    <!--Thêm readonly sẽ không cho phép sửa-->
                                </div>
                                <!--Mã nhân viên-->
                                <div class="form-group col">
                                    <label for="selectedMaNhanVien">Mã nhân viên:</label>
                                    <input type="text" class="form-control" id="selectedMaNhanVien" name="selectedMaNhanVien" readonly>
                                </div>
                            </div>

                            <div class="form-row">

                                <div class="form-group col">
                                    <label for="name">Tên độc giả:</label>
                                    <input type="text" class="form-control" id="selectedName" name="selectedName" readonly>
                                </div>

                                <!--Số điện thoại-->
                                <div class="form-group col">
                                    <label for="book">Số điện thoại:</label>
                                    <input type="text" class="form-control" id="selectedSDT" name="selectedSDT" readonly>
                                </div>
                            </div>
                            <div class="form-row">
                                <!--Ngày mượn-->
                                <div class="form-group col">
                                    <label for="return_date">Ngày mượn:</label>
                                    <input type="date" class="form-control" id="return_datemuon" name="return_datemuon" readonly>
                                </div>

                                <!--hạn trả-->
                                <div class="form-group col">
                                    <label for="return_date">Hạn trả:</label>
                                    <input type="date" class="form-control" id="return_datehan" name="return_datehan" readonly>
                                </div>
                            </div>
                            <div class="form-row">
                                <!--Ngày trả-->
                                <div class="form-group col">
                                    <label for="return_date">Ngày trả:</label>
                                    <input type="date" class="form-control" id="return_datetra" name="return_datetra" readonly>
                                </div>
                                <div class="form-group col-4">
                                    <label for="tongTienPhuThu">Tổng tiền:</label>
                                    <input type="text" class="form-control" id="tongTienPhuThu" name="tongTienPhuThu" readonly>

                                </div>
                            </div>
                            <!--Body table thông tin sách-->
                            <div class="card-body table-responsive p-0"
                                 style="height: 71.2vh" id="thongTinSachTable">
                                <table class="table table-head-fixed table-hover">
                                    <!--text-nowrap-->
                                    <thead>
                                        <tr>
                                            <th style="width: 20%">Mã Sách</th>
                                            <th style="width: 30%">Tên sách</th>
                                            <th style="width: 15%">SL Mượn</th>
                                            <th style="width: 12%"> Trả</th>
                                            <th style="width: 12%"> Lỗi  </th>
                                            <th style="width: 12%"> Mất  </th>
                                            <th style="width: 30%"> Phụ Thu  </th>

                                        </tr>

                                    </thead>
                                    <tbody id="tableBody">
                                    </tbody>
                                </table>
                            </div>
                            <!--Button trả sách-->
                            <button type="button" class="btn btn-primary" onclick="Save();">Lưu</button>
                            @* field ẩn lưu mã PM khi click 1 row  *@
                            <input id="hdfMaPM" type="hidden" value="0" />
                        </form>
                    </div>
                </div>
            </div>

            <!-- Nút chọn Sách hoặc Thông tin độc giả -->
            <div class="col-5">
                <div class="card">
                    <div class="card-header">
                        <button id="thongTinPhieuMuonButton" class="btn btn-primary">T.T Phiếu mượn</button>
                        @*<button id="thongTinDocGiaButton" class="btn btn-primary">T.T Độc giả</button>*@

                        <div class="card-tools">

                            <div class="input-group input-group-sm pt-2" style="width: 150px">
                                <!--<input type="text" name="table_search" class="form-control float-right" id="searchInput" placeholder="Search" />-->
                                @* <input type="text" id="searchInput" class="form-control" placeholder="Search" />*@
                                <!--<div class="input-group-append">
                                    <button type="submit" class="btn btn-default" id="searchButton">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>-->
                            </div>
                        </div>
                    </div>
                    <!--Body table pm-->
                    <div class="card-body table-responsive p-0" style="height: 71.2vh" id="thongTinPhieuMuonTable">
                        <table id="tablephieuMuon" class="table table-head-fixed table-hover  table-bordered">
                            <thead>
                                <tr>
                                    <th>Mã PM</th>
                                    <th>Mã thẻ</th>
                                    <th>Họ tên DG</th>
                                    <th>SĐT</th>
                                    <th>Ngày mượn</th>
                                    <th>Hạn trả</th>
                                </tr>
                            </thead>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal error-->
<div class="modal fade" id="ModalError" tabindex="-1" role="dialog" aria-labelledby="ModalError" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-danger">
                <span class="" id="contentModalError"></span>
            </div>
        </div>
    </div>
</div>

<!-- Modal success-->
<div class="modal fade" id="ModalSuccess" tabindex="-1" role="dialog" aria-labelledby="ModalSuccess" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body text-center bg-green">
                <span class="" id="contentModalSuccess"></span>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        init();
             //=====================    =====================

            // Lấy các phần tử DOM của bảng pm và bảng Thông tin độc giả
            var thongTinPhieuMuonTable = document.getElementById("thongTinPhieuMuonTable");

           // Gán sự kiện mặc định cho nút "Hiển thị Thông tin pm" khi trang được tải
            thongTinPhieuMuonTable.style.display = "block";

            // Lấy các nút chọn
            var thongTinPheuMuonButton = document.getElementById("thongTinPheuMuonButton");


         //   //=====================  Lấy dữ liệu khi search =====================
         //  // Lấy các phần tử DOM
         //   const searchInput = document.getElementById("searchInput");
         //   const searchButton = document.getElementById("searchButton");

         //   searchButton.addEventListener("click", function () {
         //       const keyword = searchInput.value.trim(); // Lấy từ khóa từ ô tìm kiếm
         //       // Gửi yêu cầu tìm kiếm đến Controller
         //    //   loadPhieuMuons(keyword);
         //   });


         //   // Lắng nghe sự kiện keyup trên trường nhập tìm kiếm
         //   searchInput.addEventListener("keyup", function (event) {
         //       if (event.key === "Enter") {
         //           const keyword = searchInput.value.trim();
         //       //    loadPhieuMuons(keyword);
         //       }
         //   });


         //   // Hàm thực hiện tìm kiếm
         //   function performSearch() {
         //       const keyword = searchInput.value.trim(); // Lấy từ khóa từ ô tìm kiếm
         ////       loadPhieuMuons(keyword);
         //   }

            // Lấy ngày hiện tại
            var currentDate = new Date();

            // Định dạng ngày hiện tại thành chuỗi YYYY-MM-DD
            var formatCurrentDate = currentDate.toISOString().slice(0, 10);

            // Đặt giá trị mặc định cho trường ngày trả thành ngày hiện tại
            document.getElementById("return_datetra").value = formatCurrentDate;
        document.getElementById("tongTienPhuThu").value = formatMoney(0);


            var manv = @HttpContext.Current.Session["manv"]
            document.getElementById("selectedMaNhanVien").value = manv;



            //load lân đầu
             //loadPhieuMuons("");

             // Hàm ajax này sẽ gọi trong controller PhieuTra / GetSachMuon
            // Trả về json và render ra tbody và gán vào element có ID tableBody
            // Ajax có công dụng gọi ngầm, sẽ không bị reload lại page, cần lấy data chỗ nào thì sẽ render lại chỗ đó.
    //===================== Hàm Làm mới danh sách sách mượn =====================
            function lamMoi()
            {
                document.getElementById("selectedMaThe").value = "";
                document.getElementById("selectedName").value = "";
                document.getElementById("selectedSDT").value = "";
                document.getElementById("return_datemuon").value = "";
                document.getElementById("return_datehan").value = "";
                document.getElementById("tongTienPhuThu").value = "";
                let tableBody = document.getElementById("tableBody");
                tableBody.innerHTML = "";
                //loadPhieuMuons('');
            }

    //===================== Hàm show phieu muon chua tra sach =====================

            //function loadPhieuMuons(keyword) {

            //    function formatDate(dateString) {
            //        // Kiểm tra xem chuỗi ngày có trống không hoặc là null không
            //        if (!dateString)
            //        {
            //            return ''; // Trả về chuỗi trống nếu ngày không được cung cấp
            //        }

            //        try
            //        {
            //            // Trích xuất giá trị ticks từ chuỗi ngày
            //            var ticks = parseInt(dateString.match(/\d+/)[0]);

            //            // Chuyển đổi ticks thành đối tượng Date của JavaScript
            //            var date = new Date(ticks);

            //            // Định dạng ngày thành MM/dd/YYYY
            //            var formattedDate = (date.getMonth() + 1).toString().padStart(2, '0') + '/' +
            //                date.getDate().toString().padStart(2, '0') + '/' +
            //                date.getFullYear();

            //            return formattedDate;
            //        } catch (error) {
            //            // Xử lý lỗi chuyển đổi ngày
            //            console.error('Lỗi chuyển đổi ngày:', error.message);
            //            return 'Ngày không hợp lệ';
            //        }
            //    }

            //    $.ajax({
            //        type: "GET",
            //        url: "/Admin/PhieuTra/phieuMuon?keyword=" + keyword,
            //        dataType: 'json',
            //        success: function (res) {
            //            var render = "";
            //            $.each(res.Result, function (i, item) {
            //                render += '<tr class="phieuMuonRow" aria-expanded="false" data-widget="expandable-table">';
            //                render += '<td  class="selectMaPm">' + item.MaPM + '</td>';
            //                render += '<td >' + item.MaThe + '</td>';
            //                render += '<td >' + item.HoTenDG + '</td>';
            //                render += '<td >' + item.SDT + '</td>';
            //                render += '<td  class="date">' + formatDate(item.NgayMuon) + '</td>';
            //                render += '<td  class="date">' + formatDate(item.HanTra) + '</td>';
            //                render += '</tr>';
            //            });

            //            let tablephieuMuon = document.getElementById("tablephieuMuon");
            //            tablephieuMuon.innerHTML = render;
            //            selectSachMuon();
            //        },
            //        error: function (status) {
            //            // show aler cảnh báo nếu lôi
            //            alert("Không tìm thấy data");
            //        }
            //    });
            //}

    //===================== Hàm show sach muon =====================

            function loadSachMuons(maPM)
            {

                $('#hdfMaPM').val(maPM);

                $.ajax({
                    type: "GET",
                    url: "/Admin/PhieuTra/GetSachMuon?maPM=" + maPM,
                    dataType: 'json',
                    success: function (res) {
                        var render = "";
                        $.each(res.Result, function (i, item) {
                            render += '<tr class="sach-row" aria-expanded="false" data-widget="expandable-table">';
                            render += '<td >' + item.MaSach + '</td>';
                            render += '<td >' + item.TenSach + '</td>';
                            render += '<td >' + item.SoLuongMuon + '</td>';
                        /*    render += '<td>  <input class="soLuongTra" min="0" type="number" value="0" style="width: 60%" onkeydown="if (event.key === \'e\' || event.key === \'E\') event.preventDefault();" />  </td>';*/
                            render += '<td>  <input id="phuThuSoLuongTra'+ item.MaSach + '"  onchange="PhuThu(' + item.MaSach + ',' + item.giasach + '); updateTongTien();"class="tra" min="0" type="number" value="0" style="width: 70%" onkeydown="if (event.key === \'e\' || event.key === \'E\') event.preventDefault();" />  </td>';
                            render += '<td>  <input id="phuThuSoLuongLoi' + item.MaSach + '"  onchange="PhuThu(' + item.MaSach + ',' + item.giasach + '); updateTongTien();"class="loi" min="0" type="number" value="0" style="width: 70%" onkeydown="if (event.key === \'e\' || event.key === \'E\') event.preventDefault();" />  </td>';
                            render += '<td>  <input id="phuThuSoLuongMat' + item.MaSach + '"  onchange="PhuThu(' + item.MaSach + ',' + item.giasach + '); updateTongTien();"class="mat" min="0" type="number" value="0" style="width: 80%" onkeydown="if (event.key === \'e\' || event.key === \'E\') event.preventDefault();" />  </td>';
                            render += '<td id="phuThu' + item.MaSach + '" class="phuThu" style="width: 150%" onchange="updateTongTien()" >' + '0' + '</td>';


                            render += '</tr>';
                        });

                        let tableBody = document.getElementById("tableBody");
                        tableBody.innerHTML = render;
                        document.getElementById("tongTienPhuThu").value = formatMoney(0);

                    },
                    error: function (status) {

                        // show aler cảnh báo nếu lôi
                        alert("Không tìm thấy data");
                        //alone.notify('Cannot load data of Sach Muon', 'danger');
                    }
                })

        }



    ////=====================  Lấy dữ liệu khi click vào pm muốn thực hiện thao tác trả sách =====================

    //       function selectSachMuon() {

    //        // Lấy danh sách các hàng trong bảng thông tin pm
    //           var pmrows = document.querySelectorAll(".phieuMuonRow");

    //           pmrows.forEach(function (row) {
    //               row.addEventListener("click", function () {
    //                    var maThe = row.querySelector("td:nth-child(2)").textContent;
    //                    var hoTen = row.querySelector("td:nth-child(3)").textContent;
    //                    var sdt = row.querySelector("td:nth-child(4)").textContent;
    //                    var ngaymuonText = row.querySelector("td:nth-child(5)").textContent;
    //                    var hantraText = row.querySelector("td:nth-child(6)").textContent;


    //                    // Chuyển đổi ngày và giờ từ văn bản thành đối tượng Date
    //                    var ngaymuon = new Date(ngaymuonText);
    //                    var hantra = new Date(hantraText);

    //                    // Điều chỉnh ngày và hạn trả để tránh sự sai khác về múi giờ
    //                    ngaymuon.setHours(ngaymuon.getHours() + 12); // Điều chỉnh lại thời gian (+1 giờ)
    //                    hantra.setHours(hantra.getHours() + 12); // Điều chỉnh lại thời gian (+1 giờ)


    //                    // Lấy ngày và tháng của ngày mượn và hạn trả
    //                    var ngaymuonFormatted = ngaymuon.toISOString().substring(0, 10);
    //                    var hantraFormatted = hantra.toISOString().substring(0, 10);

    //                   // Hiển thị thông tin ngày mượn và hạn trả vào các ô nhập dạng ngày trong form
    //                   document.getElementById("selectedMaThe").value = rowData.MaThe;
    //                   document.getElementById("selectedName").value = rowData.HoTenDG;
    //                   document.getElementById("selectedSDT").value = rowData.SDT;
    //                   document.getElementById("return_datemuon").value = rowData.NgayMuon.substring(0, 10);
    //                   document.getElementById("return_datehan").value = rowData.HanTra.substring(0, 10);



    //                   var mapm = parseInt(row.querySelector("td:nth-child(1)").textContent);
    //                   loadSachMuons(mapm);

    //                });
    //            });
    //        }

        function formatDate(dateString) {
            // Extract the timestamp from the date string
            var timestamp = parseInt(dateString.replace("/Date(", "").replace(")/", ""));

            // Create a new Date object
            var date = new Date(timestamp);

            // Format the date as "yyyy-MM-dd"
            var formattedDate = date.toISOString().split('T')[0];

            return formattedDate;
        }
        function init() {
            $('#tablephieuMuon').DataTable({
                processing: true, //Hiển thị thông báo khi dữ liệu đang được xử lý.
                serverSide: true,//Bật chế độ xử lý phía máy chủ.
                paging: true,//paging, search, searching: Cho phép phân trang và tìm kiếm.
                search: true,
                searching: true,
                searchDelay: 400, // sau khi thay đổi input search delay 1 tý, tránh thay đổi text liên tục thì gọi liên tục
                scrollY: false,//Cho phép cuộn (scroll) theo chiều dọc.
                iDisplayLength: 5, // chỉnh nếu muốn hiện số row mỗi trang
                bLengthChange: false,//Không hiển thị lựa chọn thay đổi số lượng hàng hiển thị trên trang.
                language: {
                    info: "Hiện thị _START_ đến _END_ của _TOTAL_ mục",
                    lengthMenu: "Hiện thị _MENU_ mục",
                    search: "Search",
                    processing: "Đang tải dữ liệu...",
                    paginate: {
                        previous: "Đầu",
                        next: "Tiếp theo",
                        last: "Cuối"
                    }
                },
                ajax: {
                    url: "/PhieuTra/GetListPhieuMuonPaging",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "JSON",
                    beforeSend: function () {
                        // alone.startLoading();
                    },
                    data: function (data) { //Chuẩn bị dữ liệu trước khi gửi yêu cầu.
                        var settings = $("#tablephieuMuon").dataTable().fnSettings();
                        var currentPageIndex = Math.ceil(settings._iDisplayStart / settings._iDisplayLength) + 1;
                        var request =
                        {
                            // CategoryId: parseInt($('#ddlCategory').val(), 10),
                            PageSize: 5,
                            Page: currentPageIndex,
                            Keyword: $('.dataTables_filter input[type="search"]').val()
                        };
                        return JSON.stringify(request);
                    },
                    dataSrc: function (res) {//Trích xuất dữ liệu từ phản hồi.
                        if (res.Result != null && res.Result.Results != null) {
                            return res.Result.Results;
                            //alone.stopLoading();
                        }
                        else {
                            //alone.notify('Cannot load data of Product', 'danger');
                            //alone.stopLoading();
                            return [];
                        }
                    },
                    dataFilter: function (data) {
                        // Xử lý dữ liệu trước khi nó được sử dụng.
                        var page = $.parseJSON(data);
                        if (page.Result == null) {
                            page.recordsTotal = 0;
                            page.recordsFiltered = 0;
                            //alone.stopLoading();
                            return JSON.stringify(page);
                        }
                        page.recordsTotal = page.Result.RowCount;
                        page.recordsFiltered = page.Result.RowCount;
                        //alone.stopLoading();
                        return JSON.stringify(page);
                    },
                    error: function (status) {//Xử lý lỗi khi yêu cầu không thành công.
                        //alone.notify('Cannot load data of Product', 'danger');
                        //alone.stopLoading();
                    }
                },
                columns: [
                    {
                        name: 'first',
                        "data": "MaPM", "width": "7%"
                    },
                    //{
                    //    name: 'second',
                    //    render: function (data, type, row) {
                    //        return '<button class="btn btn-icon btn-hover btn-sm btn-see-all" id="' + row.MaPM + '_' + row.MaThe + '">See All</button>'
                    //    }
                    //},
                    {

                        "data": "MaThe", "width": "10%"
                        //render: $.fn.dataTable.render.number(',')
                    },
                    {
                        "data": "HoTenDG", "width": "15%",
                       // render: DataTable.render.datetime('D-M-yyyy')
                    },
                    {
                        "data": "SDT", "width": "15%"
                    },
                    {
                        "data": "NgayMuon", "width": "15%",
                        render: DataTable.render.datetime('D-M-yyyy')
                    },
                    {
                        "data": "HanTra", "width": "15%",
                        render: DataTable.render.datetime('D-M-yyyy')
                    },

                ],
                //rowsGroup: [
                //    'first:name', 'second:name',
                //],
                columnDefs: [{//Nếu giá trị của một ô là null hoặc undefined, sẽ hiển thị giá trị mặc định là "-".
                    "defaultContent": "-",
                    "targets": "_all"
                }],
                initComplete: function () {

                },

            });

            // Thay thế sự kiện '.btn-see-all' bằng sự kiện click trên mỗi hàng (row)
            $('body').on('click', '#tablephieuMuon tbody tr', function () {
                // Lấy DataTable
                var table = $('#tablephieuMuon').DataTable();

                // Lấy dữ liệu của hàng được click
                var rowData = table.row(this).data();

                // Sử dụng hàm formatDate để chuyển đổi và định dạng ngày
                var formattedNgayMuon = formatDate(rowData.NgayMuon);
                var formattedHanTra = formatDate(rowData.HanTra);

                // Hiển thị thông tin ngày mượn và hạn trả vào các ô nhập dạng ngày trong form
                document.getElementById("selectedMaThe").value = rowData.MaThe;
                document.getElementById("selectedName").value = rowData.HoTenDG;
                document.getElementById("selectedSDT").value = rowData.SDT;
                document.getElementById("return_datemuon").value = formattedNgayMuon;
                document.getElementById("return_datehan").value = formattedHanTra;

                // Lưu mã PM vào input hidden
                document.getElementById("hdfMaPM").value = rowData.MaPM;

                // Gọi hàm loadSachMuons với tham số là mã PM
                loadSachMuons(rowData.MaPM);
            });

        }


            var ListSachTra = [];

            function createSachTraPostData()
            {
                 var sachValues = [];

                 // Lấy các ô nhập liệu từ bảng
                 var sachRows = document.querySelectorAll(".sach-row");

                 sachRows.forEach(function (row) {
                 // Lấy các ô nhập liệu từ hàng (sử dụng lớp hoặc ID thích hợp)
                 var maSach = row.querySelector('td:nth-child(1)').textContent;
                 var tenSach = row.querySelector('td:nth-child(2)').textContent;
                 var soLuongMuon = row.querySelector('td:nth-child(3)').textContent;
                 var soLuongTra = row.querySelector('input.tra').value;
                 var soluongLoi = row.querySelector('input.loi').value;
                 var soluongMat = row.querySelector('input.mat').value;
                 var PhuThu = row.querySelector('td:nth-child(7)').textContent;

                 // Thêm giá trị từ các ô nhập liệu vào mảng
                      sachValues.push({
                           MaSach: maSach,
                           TenSach: tenSach,
                           SoLuongMuon: soLuongMuon,
                           SoLuongTra: soLuongTra,
                          SoLuongLoi: soluongLoi,
                          SoLuongMat: soluongMat,
                          PhuThu: PhuThu,
                            });
                      });


                      var data = {
                            MaNhanVien: @HttpContext.Current.Session["manv"],
                            MaPhieuMuon: $('#hdfMaPM').val(),
                            MaThe: document.getElementById("selectedMaThe").value,
                            NgayTra: document.getElementById("return_datetra").value,
                            ListSachTra: sachValues,
                        }
                 return data;
             }


            function Save() {
                var dataPost = createSachTraPostData();

                // Kiểm tra xem tất cả các hàng có số lượng bằng 0 không
                var allRowsZero = dataPost.ListSachTra.every(function (item) {
                    return parseFloat(item.SoLuongTra) === 0 && parseFloat(item.SoLuongLoi) === 0 === parseFloat(item.SoLuongMat) === 0;
                });

                if (allRowsZero) {
                    document.getElementById("contentModalError").innerHTML = "Hãy nhập số lượng sách muốn trả!";
                    $("#ModalError").modal("show");
                    return;
                }

                for (var i = 0; i < dataPost.ListSachTra.length; i++) {
                    var item = dataPost.ListSachTra[i];

                    var soLuongTra = parseFloat(item.SoLuongTra);
                    var soLuongLoi = parseFloat(item.SoLuongLoi);
                    var soLuongMat = parseFloat(item.SoLuongMat);

                    // Kiểm tra xem có biến số lượng nào bé hơn 0 không
                    if (soLuongTra < 0 || soLuongLoi < 0 || soLuongMat<0) {
                        document.getElementById("contentModalError").innerHTML = "Số lượng nhập không hợp lệ!";
                        $("#ModalError").modal("show");
                        return;
                    }


                    var soLuongMuon = parseFloat(item.SoLuongMuon);

                    // Kiểm tra xem số lượng mượn có lớn hơn số lượng trả và số lượng lỗi không
                    if (isNaN(soLuongMuon) || soLuongMuon < soLuongTra + soLuongLoi+ soLuongMat) {
                        document.getElementById("contentModalError").innerHTML = "Hãy nhập đúng số lượng sách muốn trả!";
                        $("#ModalError").modal("show");
                        return;
                    }
                    else
                    {

                    }
                }

                var confirmed = confirm("Bạn có chắc muốn tạo phiếu trả không?");
                if (confirmed) {
                    // Gửi dữ liệu đến controller bằng phương thức AJAX POST
                    $.ajax({
                        type: "POST",
                        url: "/Admin/PhieuTra/TaoPhieuTra",
                        data: JSON.stringify(dataPost),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.success) {
                                document.getElementById("contentModalSuccess").innerHTML = "Thêm phiếu trả thành công!";
                                $('#tablephieuMuon').DataTable().ajax.reload();
                                $("#ModalSuccess").modal("show");
                                lamMoi();

                                console.log('Tạo phiếu trả: ', response);
                            } else {
                                document.getElementById("contentModalError").innerHTML = "Hãy thêm số lượng sách muốn trả!";
                                $("#ModalError").modal("show");
                                console.log('Tạo phiếu trả: ', response);
                            }
                        },
                        error: function () {
                            alert("Lỗi khi gửi yêu cầu đến máy chủ.");
                        }
                    });
                }
            }


        function PhuThu(maSach, giasach) {
            var NgayTra = document.getElementById("return_datetra").value;
            var HanTra = document.getElementById("return_datehan").value;
            var Soluongloi = document.getElementById('phuThuSoLuongLoi' + maSach).value;
            var Soluongtra = document.getElementById('phuThuSoLuongTra' + maSach).value;
            var Soluongmat = document.getElementById('phuThuSoLuongMat' + maSach).value;

            let soNgayChenhLech = Math.max(0, (new Date(NgayTra) - new Date(HanTra)) / (1000 * 60 * 60 * 24));
            // Khai báo biến phuThu ở đây

            if (Soluongtra > 0 || Soluongloi > 0 || Soluongmat>0) {
                if (soNgayChenhLech > 0) {// trễ

                    document.getElementById("phuThu" + maSach).innerHTML = (soNgayChenhLech * 2000 * Soluongtra) + (giasach * 0.5 * Soluongloi + soNgayChenhLech * 2000 * Soluongloi) + (Soluongmat * giasach + soNgayChenhLech * 2000 * Soluongmat); //+ " VND";

                } else {//khong trễ
                    document.getElementById("phuThu" + maSach).innerHTML = giasach * 0.5 * Soluongloi   + Soluongmat * giasach ; //+ " VND";

                }
            }
            else {
                document.getElementById("phuThu" + maSach).innerHTML = 0;
            }
        }


            function updateTongTien() {
                var tongTienPhuThu = 0;

                // Lấy danh sách các hàng trong bảng thông tin sách
                var sachRows = document.querySelectorAll(".sach-row");

                // Lặp qua từng hàng và tính tổng tiền Phụ Thu
                sachRows.forEach(function (row) {
                    var maSach = row.querySelector('td:nth-child(1)').textContent;
                    var phuThuValue = parseFloat(row.querySelector('.phuThu').textContent);

                    // Kiểm tra nếu giá trị là một số hợp lệ thì thêm vào tổng tiền
                    if (!isNaN(phuThuValue)) {
                        tongTienPhuThu += phuThuValue;
                    }
                });

                // Hiển thị tổng tiền trong trường "Tổng tiền"
                document.getElementById("tongTienPhuThu").value = formatMoney(tongTienPhuThu);
            }

            // Hàm format tiền
            function formatMoney(number) {
                return number.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            }



    </script>
}